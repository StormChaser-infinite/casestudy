{
	"name": "datacleanjoin",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SqlServerTable1",
						"type": "DatasetReference"
					},
					"name": "correspondanttable",
					"description": "Import data from  FKTA_D_CORRESPONDANT] "
				},
				{
					"dataset": {
						"referenceName": "FKTA_D_COUNTRY",
						"type": "DatasetReference"
					},
					"name": "countrytable",
					"description": "[FKTA_D_COUNTRY]"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SqlServerTable2",
						"type": "DatasetReference"
					},
					"name": "correspomdantcoutryiso"
				}
			],
			"transformations": [
				{
					"name": "filtercountrycode",
					"description": "filter the country table where code > 0"
				},
				{
					"name": "joinwithcountry",
					"description": "to get the columns [FKCO_V_COUNTRY_ISO2]\n      ,[FKCO_V_COUNTRY_ISO3]"
				},
				{
					"name": "selectisocol",
					"description": "Renaming countrytable to selectisocol with columns FKCO_V_COUNTRY_ISO2, FKCO_V_COUNTRY_ISO3, "
				}
			],
			"scriptLines": [
				"parameters{",
				"     countrycode as timestamp (currentTimestamp())",
				"}",
				"source(output(",
				"          FKCO_ID as decimal(22,0),",
				"          FKCO_V_VALUE as string,",
				"          FKCO_V_COUNTRY_NAME as string,",
				"          FKCO_COUNTRY as decimal(22,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> correspondanttable",
				"source(output(",
				"          FKCO_ID as integer,",
				"          FKCO_V_COUNTRY_ISO2 as string,",
				"          FKCO_V_COUNTRY_ISO3 as string,",
				"          FKCO_V_COUNTRY_NAME as string,",
				"          FKCO_I_COUNTRY_NUM as decimal(22,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> countrytable",
				"correspondanttable filter(FKCO_COUNTRY > 0) ~> filtercountrycode",
				"filtercountrycode, countrytable join(FKCO_COUNTRY == countrytable@FKCO_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinwithcountry",
				"joinwithcountry select(mapColumn(",
				"          FKCO_ID = correspondanttable@FKCO_ID,",
				"          FKCO_V_VALUE,",
				"          FKCO_V_COUNTRY_NAME = correspondanttable@FKCO_V_COUNTRY_NAME,",
				"          FKCO_COUNTRY,",
				"          FKCO_V_COUNTRY_ISO2,",
				"          FKCO_V_COUNTRY_ISO3",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectisocol",
				"selectisocol sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> correspomdantcoutryiso"
			]
		}
	}
}